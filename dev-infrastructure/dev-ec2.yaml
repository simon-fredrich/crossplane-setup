AWSTemplateFormatVersion: 2010-09-09
Description: Sample template to provision an EC2 Instance with public IP. Create
  a Security Group and an EBS volume which get associate with this EC2.

# get the name of the base stack which is created first and has VPC details
Parameters:
  VPCStackName:
    Description: dev-vpc
    Type: String
    Default: dev-vpc

  KeyPairName:
    Description: test-key-pair
    Type: AWS::EC2::KeyPair::KeyName # standard type
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.medium

  InstanceImageId:
    Description: EC2 Image Id from this region
    Type: AWS::EC2::Image::Id
    Default: ami-0a116fa7c861dd5f9

Resources:
  # create a security group
  mySG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable http(80) & ssh(22) access
      GroupName: WebServer-SG
      VpcId: !ImportValue
        Fn::Sub: ${VPCStackName}-VPCID
      SecurityGroupIngress:
        # allow http
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0 # any IP
        # allow ssh  
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0 # only for demo else use your IP or corporate gateway IP
      Tags:
        - Key: Name
          Value: demo-sg
        - Key: Application
          Value: !Ref AWS::StackName

  # allow local traffic
  SGBaseIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref mySG
      IpProtocol: "-1"
      FromPort: -1
      ToPort: -1
      SourceSecurityGroupId: !Ref mySG

  # create volume for EC2 instance
  Volume:
    Type: AWS::EC2::Volume
    Properties:
      AvailabilityZone: eu-central-1
      Encrypted: false
      Size: 30
      Tags:
        - Key: Name
          Value: demo-volume
        - Key: Application
          Value: !Ref AWS::StackName
      VolumeType: gp3

  # EC2 instance which will have access for http and ssh
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-SUBNET
      SecurityGroupIds:
        - !Ref mySG
      KeyName: !Ref KeyPairName
      ImageId: !Ref InstanceImageId
      UserData: !Base64 |
        #!/bin/bash -xe

        git clone https://github.com/simon-fredrich/crossplane-setup.git
        cd crossplane-setup
        ./setup.sh
      Tags:
        - Key: Name
          Value: demo-ec2
        - Key: Application
          Value: !Ref AWS::StackName

# output important values for easy viewing in cloudformation dashboard
Outputs:
  InstanceId:
    Description: InstanceId of the first EC2 instance
    Value: !Ref EC2Instance

  PublicDNS:
    Description: Public DNS Name of the EC2 instance
    Value: !GetAtt EC2Instance.PublicDnsName

  PublicIP:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt EC2Instance.PublicIp